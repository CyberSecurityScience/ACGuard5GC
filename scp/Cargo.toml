[package]
name = "scp"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
jwt-simple = {path = "../../libs/rust-jwt-simple"}
dashmap = "4.0.2"
rand = "0.8"
env_logger = "0.8.4"
rust-sctp = {path = "../../libs/rust-sctp"}
bitfield = "0.13.2"
hex = "*"
once_cell = "1.8.0"
concat-idents = "1.1.3"
sha2 = "0.9.5"
num = "0.4"
num-derive = "0.4"
num-traits = "0.2"
mona = "0.1.0"
crossbeam-queue = "0.3.8"

nscp_api = {path = "../../libs/nscp_api"}
nnssf_openapi = {path = "../../libs/nnssf_openapi"}
nnrf_openapi = {path = "../../libs/nnrf_openapi"}
nsmsf_openapi = {path = "../../libs/nsmsf_openapi"}
nudm_openapi = {path = "../../libs/nudm_openapi"}
namf_openapi = {path = "../../libs/namf_openapi"}
nausf_openapi = {path = "../../libs/nausf_openapi"}
nsmf_openapi = {path = "../../libs/nsmf_openapi"}
libmodels = {path = "../../libs/libmodels"}
models = {package = "libsbimodels", path = "../../libs/libsbimodels"}
mime_multipart = {path = "../../libs/mime_multipart"}

# Common
async-trait = "0.1.50"
chrono = { version = "0.4", features = ["serde"] }
futures = "0.3"
swagger_old = {package = "swagger", version = "5.0.2"}
swagger = { version = "6.1", features = ["serdejson", "server", "client", "tls", "tcp"] }
log = "0.4.0"
mime = "0.3"
openssl = "0.10"
hyper_0_10 = {package = "hyper", version = "0.10", default-features = false}
mime_0_2 = { package = "mime", version = "0.2.6"}
bytes = "1.0"
tokio-stream = "*"

serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.8.17"

# Crates included if required by the API definition
uuid = {version = "0.8", features = ["serde", "v4"]}

# Common between server and client features
hyper = {version = "0.14", features = ["full"]}
hyper-tls = "0.5"
hyper-openssl = "0.9"
serde_ignored = {version = "0.1.1"}
url = {version = "2.1"}

# Client-specific

# Server, and client callback-specific
lazy_static = { version = "1.4" }
percent-encoding = {version = "2.1.0"}
regex = {version = "1.3"}

# Conversion
frunk = { version = "0.3.0" }
frunk_derives = { version = "0.3.0" }
frunk_core = { version = "0.3.0" }
frunk-enum-derive = { version = "0.2.0" }
frunk-enum-core = { version = "0.2.0" }
base64 = "0.21.2"
clap = "3.0.0-beta.2"
tokio = { version = "1.14", features = ["full"] }
native-tls = "0.2"
tokio-tls = "0.3"
tokio-openssl = "0.6"
futures-util = "0.3"

local-ip-address = "0.4.4"
md5 = "0.7.0"

array_tool = "1.0.3"

# Private-ID
common = {path = "../../libs/Private-ID/common"}
crypto = {path = "../../libs/Private-ID/crypto"}
protocol = {path = "../../libs/Private-ID/protocol"}
rpc = {path = "../../libs/Private-ID/protocol-rpc", package = "protocol-rpc" }
